{"version":3,"sources":["urlConfig.js","helper/axios.js","actions/auth.js","components/input/Input.js","components/TopNavBar/TopNavBar.js","page/Auth/Login.js","page/Auth/Register.js","actions/hotel.js","components/smallCard/SmallCard.js","page/hotel/Search.js","page/Home/Home.js","components/privateRoute/PrivateRoute.js","actions/Stripe.js","components/nav/ConnectNav.js","components/nav/DashboardNav.js","components/smallCard/OrderdModal.js","components/smallCard/BookingCard.js","user/Dashboard.js","user/DashboardSeller.js","page/hotel/NewHotel.js","stripe/StripeCallback.js","page/hotel/EditHotel.js","page/hotel/HotelDetails.js","stripe/StripeSuccess.js","stripe/StripeFailed.js","page/hotel/SearchResultPage.js","App.js","reducer/authReducer.js","reducer/Reducer.js","Store.js","index.js"],"names":["API","axiosInstance","axios","create","baseURL","userRegister","payload","a","post","userLogin","updateUserInLocalStorage","user","next","window","localStorage","getItem","auth","JSON","parse","setItem","stringify","Input","label","type","value","placeholder","autoComplete","icon","id","onHandleChange","className","onChange","TopNavBar","props","dispatch","useDispatch","useSelector","state","history","useHistory","useState","to","onClick","clear","push","children","Login","email","setEmail","password","setPassword","request","setRequest","handleSubmit","e","preventDefault","res","status","data","response","toast","error","target","disabled","color","height","width","Register","name","setName","success","message","createHotel","token","headers","Authorization","getHotel","get","deleteHotel","hotelId","delete","getSellerHotel","getHotelById","editHotel","put","getuserBooking","searchListing","query","diffDays","from","start","Date","end","Math","round","abs","SmallCard","hotel","seller","showMoreButton","handleHotelDelete","f","image","setImage","useEffect","_id","contentType","src","alt","title","amount","price","currency","toLocaleString","style","location","content","substring","bed","toLocaleDateString","EditOutlined","DeleteOutlined","Option","Select","RangePicker","DatePicker","config","appId","process","REACT_APP_ALGOLIA_ID","apiKey","REACT_APP_ALGOLIA_API_KEY","language","Search","setLocation","date","setDate","setBed","defaultValue","suggestion","dateString","disabledDate","current","valueOf","moment","subtract","size","SearchOutlined","Home","hotels","setHotels","loadHotel","map","h","idx","PrivateRoute","Component","component","rest","createConnectAcoount","getAccountStatus","getAccountBalance","getStripeSessionId","stripeSuccessRequest","Meta","Card","Ribbon","Badge","ConnectNav","balance","setBalance","then","avatar","description","createdAt","fromNow","stripe_seller","charges_enabled","text","pending","b","DashboardNav","active","pathname","OrderdModal","session","orderdBy","showModal","setShowModal","visible","onCancel","payment_intent","payment_status","toUpperCase","amount_total","customer","BookingCard","Dashboard","bookings","setBookings","getHotelBooking","booking","orderedBy","DashboardSeller","loading","setLoading","handleClick","href","console","log","confirm","HomeOutlined","NewHotel","values","setValues","preview","setPreview","formdata","FormData","append","setTimeout","reload","handleImageChange","files","URL","createObjectURL","handleChange","onSubmit","accept","hidden","option","StripeCallback","accountStatus","LoadingOutlined","EditHotel","match","sellerHotel","params","length","HotelDetails","isAlreadyBooked","hotelDetails","loadStripe","REACT_APP_STRIPE_KEY","redirectToCheckout","sessionId","format","postedBy","StripeSuccess","StripeFailed","SearchResultPage","queryString","search","result","App","userState","position","exact","path","rooReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b966c77e.chunk.js","sourcesContent":["export const API = 'http://localhost:5000/api'","import axios from 'axios'\r\nimport { API } from '../urlConfig';\r\n\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: API,\r\n})\r\n\r\nexport default axiosInstance","import axios from '../helper/axios'\r\n\r\nexport const userRegister = async (payload) => \r\n    await axios.post('/register', payload)\r\n\r\nexport const userLogin = async (payload) => \r\n    await axios.post('/login', payload)\r\n\r\n// update user in local storage\r\nexport const updateUserInLocalStorage = (user, next) => {\r\n    if(window.localStorage.getItem('auth')) {\r\n        let auth = JSON.parse(localStorage.getItem('auth'));\r\n        auth.user = user;\r\n        localStorage.setItem('auth', JSON.stringify(auth));\r\n        next();\r\n    }\r\n}","import React from 'react'\r\nimport { EyeOutlined } from '@ant-design/icons'\r\nimport { EyeInvisibleOutlined } from '@ant-design/icons'\r\n\r\nconst Input = ({\r\n    label,\r\n    type,\r\n    value,\r\n    placeholder,\r\n    autoComplete,\r\n    icon,\r\n    id,\r\n    onHandleChange}) => (\r\n\r\n    <form className=\"mt-3\">\r\n        <div className=\"form-group mb-3\">\r\n            <label className=\"form-label\">{label}</label>\r\n            <div className={icon && \"password\"}>\r\n                <input\r\n                    type={type}\r\n                    className={id ? \"input\" : \"form-control\"}\r\n                    placeholder={ placeholder}\r\n                    onChange={onHandleChange}\r\n                    value={value}\r\n                    autoComplete={autoComplete}\r\n                />\r\n                {id === \"input\" && icon}\r\n            </div>\r\n        </div>\r\n</form>\r\n)\r\n\r\nexport default Input\r\n","import React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Link } from 'react-router-dom'\r\nimport { FaAlignLeft } from 'react-icons/fa'\r\n\r\n\r\nconst TopNavBar = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const { auth }  = useSelector((state) => ({...state}))\r\n    const history = useHistory()\r\n\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    const logout = () => {\r\n        dispatch({\r\n            type: \"LOGOUT\",\r\n            payload: null\r\n        })\r\n        window.localStorage.clear()\r\n        history.push('/login')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"nav bg-light d-flex justify-content-between align-items-center\">\r\n                <Link className=\"nav-link\" to=\"/\">\r\n                    Home\r\n                </Link>\r\n\r\n               \r\n                <div className=\"d-flex rightBar_menu\">\r\n                    {auth !== null && \r\n                        <>  \r\n                            <Link className=\"nav-link\" to=\"/dashboard\">\r\n                                Dashboard\r\n                            </Link>\r\n                            <Link className=\"nav-link pointer\" onClick={logout}>\r\n                                logout\r\n                            </Link>\r\n                        </>\r\n                    }\r\n\r\n                    {auth === null &&\r\n                        <>\r\n                            <Link className=\"nav-link\" to=\"/login\">\r\n                                Login\r\n                            </Link>\r\n                            <Link className=\"nav-link\" to=\"/register\">\r\n                                Register\r\n                            </Link>\r\n                        </>\r\n                    }\r\n                </div>\r\n            </div>\r\n            {props.children}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TopNavBar\r\n","import React, { useState } from 'react'\r\nimport { userLogin } from '../../actions/auth';\r\nimport Input from '../../components/input/Input'\r\nimport { useDispatch } from 'react-redux'\r\nimport TopNavBar from '../../components/TopNavBar/TopNavBar'\r\nimport { toast } from 'react-toastify';\r\nimport Loader from 'react-loader-spinner'\r\n\r\nconst Login = ({ history }) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [request, setRequest] = useState(false);\r\n    const dispatch = useDispatch()\r\n\r\n    const handleSubmit = async(e) => {\r\n        e.preventDefault();\r\n        setRequest(true)\r\n        const user = {\r\n            email, \r\n            password\r\n        }\r\n\r\n        try {\r\n            const res = await userLogin(user)\r\n            if(res.status === 200) {\r\n                window.localStorage.setItem('auth', JSON.stringify(res.data))\r\n                dispatch({\r\n                    type: 'USER_LOGGEDIN',\r\n                    payload: res.data\r\n                })\r\n                history.push('/dashboard')\r\n            }\r\n        } catch (error) {\r\n            if(error.response.status === 400) toast.error(error.response.data)\r\n            setRequest(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <TopNavBar>\r\n            <div className=\"text-center p-4 mt-2 header bg-secondary\">\r\n                <h2>Login</h2>\r\n            </div>\r\n\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 offset-md-3\">\r\n                        <Input\r\n                            type='email'\r\n                            label='Email'\r\n                            className='form-control'\r\n                            placeholder='Enter Email'\r\n                            onHandleChange={(e)=>setEmail(e.target.value)}\r\n                            value={email}\r\n                            autoComplete=\"on\"\r\n                        />\r\n                        <Input\r\n                            type='password'\r\n                            label='Password'\r\n                            className='form-control'\r\n                            placeholder='Enter Password'\r\n                            onHandleChange={(e)=>setPassword(e.target.value)}\r\n                            value={password}\r\n                        />\r\n                        <button \r\n                           className=\"btn btn-primary px-5\" \r\n                            type=\"submit\"\r\n                            disabled={ !email || !password}\r\n                            onClick={handleSubmit}\r\n                        >\r\n                            {request ? \r\n                                <Loader\r\n                                    type=\"Puff\"\r\n                                    color=\"#00BFFF\" \r\n                                    height={20}\r\n                                    width={20}\r\n                                />\r\n                                : \"Submit\"\r\n                            }\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </TopNavBar>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useState } from 'react'\r\nimport Input from '../../components/input/Input';\r\nimport TopNavBar from '../../components/TopNavBar/TopNavBar'\r\nimport { toast } from 'react-toastify';\r\nimport { userRegister } from '../../actions/auth';\r\nimport { EyeOutlined } from '@ant-design/icons'\r\nimport { EyeInvisibleOutlined } from '@ant-design/icons'\r\n\r\nconst Register = ({history}) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n   \r\n    const handleSubmit = async(e) => {\r\n        e.preventDefault();\r\n\r\n        const user = {\r\n            name, \r\n            email, \r\n            password\r\n        }\r\n\r\n        try {\r\n            const res = await userRegister(user)\r\n            toast.success(res.data.message)\r\n            history.push('/login')\r\n        } catch (error) {\r\n           if(error.response.status === 400) toast.error(error.response.data)\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <TopNavBar>\r\n            <div className=\"text-center p-4 mt-2 header bg-secondary\">\r\n                <h2>Register</h2>\r\n            </div>\r\n          \r\n            \r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 offset-md-3\">\r\n                        <Input\r\n                            type=\"text\"\r\n                            label='Your Name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onHandleChange={(e)=>setName(e.target.value)}\r\n                            autoComplete=\"on\"\r\n                        />\r\n                        <Input\r\n                            type=\"email\"\r\n                            label='Email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onHandleChange={(e)=>setEmail(e.target.value)}\r\n                            autoComplete=\"on\"\r\n                        />\r\n                        <Input\r\n                            type=\"password\"\r\n                            label='Password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onHandleChange={(e)=>setPassword(e.target.value)}\r\n                        />\r\n        \r\n                        <button \r\n                            className=\"btn btn-primary px-5\"\r\n                            type=\"submit\"\r\n                            disabled={!name || !email || !password}\r\n                            onClick={handleSubmit}\r\n                        >\r\n                            Submit\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </TopNavBar>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","import axios from '../helper/axios'\r\n\r\nexport const createHotel = async (token, data) => \r\n    await axios.post('/create-hotel', data, {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n\r\nexport const getHotel = async () => \r\n    await axios.get('/hotels')\r\n\r\n\r\nexport const deleteHotel = async (token, hotelId) => \r\n    await axios.delete(`/delete-hotel/${hotelId}`, {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n\r\nexport const getSellerHotel = async (token) => \r\n    await axios.get('/seller-hotel', {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n\r\nexport const getHotelById = async (hotelId) => \r\n    await axios.get(`/hotel-details/${hotelId}`)\r\n    \r\n\r\nexport const editHotel = async (token, data, hotelId) => \r\n    await axios.put(`/update/hotel/${hotelId}`, data, {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n\r\n\r\nexport const getuserBooking = async(token) => \r\n    await axios.get('/user-hotel-booking', {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n\r\nexport const hotelAlreadyBooked = async(token, hotelId) => {\r\n    await axios.get(`/is-already-booked/${hotelId}`, {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const searchListing = async (query) => {\r\n    await axios.get('/search-listings', query)\r\n}\r\n\r\n\r\nexport const diffDays = (from, to) => {\r\n    const day = 24 * 60 * 60 *1000\r\n    const start = new Date(from)\r\n    const end = new Date(to)\r\n    const difference = Math.round(Math.abs(start - end) / day)\r\n    return difference\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { diffDays } from '../../actions/hotel'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport { API } from '../../urlConfig'\r\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons'\r\nimport Loader from 'react-loader-spinner'\r\n\r\n\r\nconst SmallCard = ({ \r\n    hotel, \r\n    seller = false, \r\n    showMoreButton = true ,\r\n    handleHotelDelete = (f) => f\r\n}) => {\r\n   \r\n    const { auth } = useSelector(state => ({ ...state }))\r\n    const [image, setImage] = useState('');\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        setImage(`${API}/hotel/image/${hotel._id}`)\r\n    })\r\n\r\n    const currencyFormatter = (data) => {\r\n        return (data.amount).toLocaleString(data.currency, {\r\n            style: \"currency\",\r\n            currency: data.currency\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card mb-3\">\r\n                <div className=\"row no-gutters\">\r\n                    <div className=\"col-md-4\">\r\n                        {hotel.image &&  hotel.image.contentType ? (\r\n                                <img\r\n                                    src={image} \r\n                                    alt=\"no img\"\r\n                                    className=\"card-image img img-fluid\"\r\n                                />\r\n                            ) : (\r\n                                <Loader\r\n                                    type=\"Puff\"\r\n                                    color=\"Blue\" \r\n                                    height={50}\r\n                                    width={50}\r\n                               />\r\n                            )\r\n                        }\r\n                    </div>\r\n                    <div className=\"col-md-8\">\r\n                        <div className=\"card-body\">\r\n                            <h3 className=\"card-title\">{hotel.title}{\" \"}\r\n                                <span className=\"text-primary\">\r\n                                    {currencyFormatter({\r\n                                        amount: hotel.price,\r\n                                        currency: 'Inr'\r\n                                    })}\r\n                                </span>\r\n                            </h3>\r\n                            <p className=\"alert alert-info\">{hotel.location}</p>\r\n                            <p className=\"card-text\">{`${hotel.content.substring(1, 100)}...`}</p>\r\n                            <p className=\"card-text\">\r\n                                <span className=\"text-primary\">\r\n                                    for {diffDays(hotel.from, hotel.to)}{\" \"}\r\n                                    {diffDays(hotel.from, hotel.to) >= 1 ? \"day\" : \"days\"}\r\n                                </span>\r\n                            </p>\r\n                            <p className=\"card-text\">Bed {hotel.bed}</p>\r\n                            <p className=\"card-text\">\r\n                                Available from {new Date(hotel.from).toLocaleDateString()}\r\n                            </p>\r\n                                <div className=\"d-flex justify-content-between h4\">\r\n                                    { showMoreButton && \r\n                                        <button\r\n                                            onClick={() => history.push(`/hotel/${hotel._id}`)}\r\n                                            className=\"btn btn-primary\">\r\n                                            Show more\r\n                                        </button>\r\n                                    }\r\n                                    { seller &&\r\n                                        <>\r\n                                            <Link to={`/hotel/edit/${hotel._id}`}>\r\n                                                <EditOutlined className=\"text-warning\" />\r\n                                            </Link>\r\n                                            <DeleteOutlined\r\n                                                className=\"text-danger\"\r\n                                                onClick={() => handleHotelDelete(hotel._id)}\r\n                                            />\r\n                                        </>\r\n                                    }\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SmallCard\r\n","import React, { useState } from 'react'\r\nimport { DatePicker, Select } from 'antd'\r\nimport { SearchOutlined } from '@ant-design/icons'\r\nimport AlgoliaPlaces from 'algolia-places-react'\r\nimport moment from 'moment'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nconst { Option } = Select\r\nconst { RangePicker } = DatePicker\r\n\r\nconst config = {\r\n    appId: process.env.REACT_APP_ALGOLIA_ID,\r\n    apiKey: process.env.REACT_APP_ALGOLIA_API_KEY,\r\n    language: 'en',\r\n}\r\n\r\nconst Search = () => {\r\n\r\n    const [location, setLocation] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [bed, setBed] = useState('');\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = async () => {\r\n        if(!location && !date && !bed) return;\r\n        history.push(`/search-result?location=${location}&date=${date}&bed=${bed}`);  \r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex pb-4 search_bar\">\r\n            <div className=\"w-100\">\r\n                <AlgoliaPlaces\r\n                    placeholder=\"Where you want to go?\"\r\n                    defaultValue={location}\r\n                    Option={config}\r\n                    onChange={({ suggestion }) => setLocation(suggestion.value)}\r\n                    style={{ height: '50px' }}\r\n                />\r\n            </div>\r\n            <RangePicker\r\n                className=\"w-100 rangePicker\"\r\n                onChange={(value, dateString) => setDate(dateString)}\r\n                disabledDate={(current) =>\r\n                    current && current.valueOf() < moment().subtract(1, 'days')}\r\n            />\r\n            <Select\r\n                onChange={(value) => setBed(value)}\r\n                className=\"w-100\"\r\n                size=\"large\"\r\n                placeholder=\"Number of beds\"\r\n            >\r\n                <Option key={1}>{1}</Option>\r\n                <Option key={2}>{2}</Option>\r\n                <Option key={3}>{3}</Option>\r\n                <Option key={4}>{4}</Option>\r\n            </Select>\r\n\r\n            <SearchOutlined\r\n                className=\"btn btn-primary p-3 btn-square\"\r\n                onClick={handleSubmit}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React, { useState, useEffect } from 'react'\r\nimport { getHotel } from '../../actions/hotel'\r\nimport SmallCard from '../../components/smallCard/SmallCard';\r\nimport TopNavBar from '../../components/TopNavBar/TopNavBar'\r\nimport Search from '../hotel/Search';\r\n\r\nconst Home = () => {\r\n\r\n    const [hotels, setHotels] = useState([]);\r\n\r\n    useEffect(() => {\r\n        loadHotel()\r\n    },[])\r\n\r\n    const loadHotel = async () => {\r\n        const res = await getHotel();\r\n        setHotels(res.data.hotels);\r\n    }\r\n\r\n\r\n    return (\r\n        <TopNavBar>\r\n            <div className=\"text-center p-4 mt-2 header bg-secondary\">\r\n                <h2>All Hotels</h2>\r\n            </div>\r\n            <div>\r\n                <br/>\r\n                <Search />\r\n            </div>\r\n            <div className=\"container-fluid mt-2\">\r\n                {\r\n                    hotels.map((h, idx) => (\r\n                        <SmallCard \r\n                            key={idx} \r\n                            hotel={h}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </TopNavBar>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest}) => {\r\n    return  <Route {...rest} \r\n            component={(props) => {\r\n                const auth = window.localStorage.getItem('auth');\r\n                if(auth) {\r\n                    return <Component {...props} />\r\n                } else {\r\n                    return <Redirect to=\"/login\" />\r\n                }\r\n            }}\r\n        />\r\n}\r\n\r\nexport default PrivateRoute\r\n","import axios from '../helper/axios'\r\n\r\nexport const createConnectAcoount = async (token) => \r\n    await axios.post('/create-connect-account',\r\n    {}, \r\n    {\r\n        headers: {\r\n            Authorization: `Bearer ${token}` \r\n        }\r\n    }\r\n);\r\n\r\nexport const getAccountStatus = async (token) => \r\n    await axios.post('/get-account-status',\r\n    {}, \r\n    {\r\n        headers: {\r\n            Authorization: `Bearer ${token}` \r\n        }\r\n    }\r\n);\r\n\r\nexport const getAccountBalance = async (token) => \r\n    await axios.post('/get-account-balance',\r\n    {}, \r\n    {\r\n        headers: {\r\n            Authorization: `Bearer ${token}` \r\n        }\r\n    }\r\n);\r\n\r\nexport const payoutSetting = async (token) => \r\n    await axios.post('/payout-setting',\r\n    {}, \r\n    {\r\n        headers: {\r\n            Authorization: `Bearer ${token}` \r\n        }\r\n    }\r\n);\r\n\r\n\r\nexport const getStripeSessionId = async (token, hotelId) =>\r\n    await axios.post(`/stripe-session-id`, \r\n    {\r\n        hotelId\r\n    }, \r\n    {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n)\r\n\r\nexport const stripeSuccessRequest = async (token, hotelId) =>\r\n    await axios.post(`/stripe-success`, \r\n    {\r\n        hotelId\r\n    },\r\n    {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Card, Avatar, Badge } from 'antd'\r\nimport moment from 'moment'\r\nimport { getAccountBalance, payoutSetting } from '../../actions/Stripe';\r\nimport { toast } from 'react-toastify';\r\nimport { SettingOutlined } from '@ant-design/icons'\r\n\r\n\r\nconst { Meta } = Card;\r\nconst { Ribbon } = Badge;\r\n\r\nconst ConnectNav = () => {\r\n\r\n    const { auth } = useSelector(state => ({...state}));\r\n    const { user } = auth;\r\n\r\n    const [balance, setBalance] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getAccountBalance(auth.token).then(res => {\r\n            setBalance(res.data)\r\n        })\r\n    },[])\r\n\r\n    const currencyFormatter = (data) => {\r\n        return (data.amount / 100).toLocaleString(data.currency, {\r\n            style: \"currency\",\r\n            currency: data.currency\r\n        })\r\n    }\r\n\r\n    // const hadlePayoutSetting = async () => {\r\n    //     setLoading(true)\r\n    //     try {\r\n    //         const res = await payoutSetting(auth.token);\r\n    //         console.log(res);\r\n    //         // window.location.href = \r\n    //         setLoading(false)\r\n    //     } catch (error) {\r\n    //         console.log(error);\r\n    //         setLoading(false)\r\n    //         toast.error('Unable to access setting. Try again.')\r\n    //     }\r\n    // }\r\n    \r\n    return (\r\n        <div className=\"d-flex justify-content-around\">\r\n            <Card>\r\n                <Meta \r\n                    avatar={<Avatar>{user.name[0]}</Avatar>}\r\n                    title={user.name}\r\n                    description={`Joined ${moment(user.createdAt).fromNow()}`}\r\n                />\r\n            </Card>\r\n            {\r\n                auth &&\r\n                auth.user &&\r\n                auth.user.stripe_seller &&\r\n                auth.user.stripe_seller.charges_enabled && \r\n                (<>\r\n                    <Ribbon text=\"Available\" color=\"grey\">\r\n                        <Card className=\"bg-light pt-1\">\r\n                            {balance && balance.pending && balance.pending.map((b, id) => (\r\n                                <span key={id} className=\"lead\">\r\n                                    {currencyFormatter(b)}\r\n                                </span>\r\n                            ))}\r\n                        </Card>\r\n                    </Ribbon>\r\n                    \r\n                    {/* <Ribbon text=\"Payouts\" color=\"silver\">\r\n                        <Card onClick={hadlePayoutSetting} className=\"bg-light pointer\">\r\n                            <SettingOutlined className=\"h5 pt-2\" />\r\n                        </Card>\r\n                    </Ribbon> */}\r\n                </>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConnectNav\r\n","import { Link } from 'react-router-dom'\r\n\r\nconst DashboardNav = () => {\r\n\r\n    const active = window.location.pathname\r\n    \r\n    return (\r\n        <ul className=\"nav nav-tabs\">\r\n            <li className=\"nav-item\">\r\n                <Link \r\n                    className={`nav-link ${active === \"/dashboard\" && \"active\"}`} \r\n                    to=\"/dashboard\"\r\n                    >\r\n                        Your Bookings\r\n                    </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link \r\n                    className={`nav-link ${active === \"/dashboard/seller\" && \"active\"}`}\r\n                    to=\"/dashboard/seller\"\r\n                    >\r\n                        Your Hotels\r\n                </Link>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default DashboardNav\r\n","import React from 'react'\r\nimport { Modal } from 'antd'\r\n\r\nconst OrderdModal = ({ session, orderdBy, showModal, setShowModal }) => {\r\n    return (\r\n        <Modal \r\n            visible={showModal}\r\n            title=\"Order Payment info\"\r\n            onCancel={()=>setShowModal(!showModal)} \r\n        >\r\n            <p>Payment intent: {session.payment_intent}</p>\r\n            <p>Payment status: {session.payment_status}</p>\r\n            <p>\r\n                Amount total: {session.currency.toUpperCase()}{\" \"}\r\n                {session.amount_total / 100}\r\n            </p>\r\n            <p>Stripe customer: {session.customer}</p>\r\n            <p>Customer: {orderdBy.name}</p>\r\n        </Modal>\r\n        \r\n    )\r\n}\r\n\r\nexport default OrderdModal\r\n","import React, { useEffect, useState } from 'react'\r\nimport { diffDays } from '../../actions/hotel'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport { API } from '../../urlConfig'\r\nimport Loader from 'react-loader-spinner'\r\nimport OrderdModal  from './OrderdModal'\r\n\r\n\r\nconst BookingCard = ({\r\n    hotel,\r\n    session,\r\n    orderdBy\r\n}) => {\r\n\r\n    const { auth } = useSelector(state => ({ ...state }))\r\n    const [image, setImage] = useState('');\r\n    const [showModal, setShowModal] = useState(false);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        setImage(`${API}/hotel/image/${hotel._id}`)\r\n    })\r\n\r\n    const currencyFormatter = (data) => {\r\n        return (data.amount).toLocaleString(data.currency, {\r\n            style: \"currency\",\r\n            currency: data.currency\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card mb-3\">\r\n                <div className=\"row no-gutters\">\r\n                    <div className=\"col-md-4\">\r\n                        {hotel.image && hotel.image.contentType ? (\r\n                            <img\r\n                                src={image}\r\n                                alt=\"no img\"\r\n                                className=\"card-image img img-fluid\"\r\n                            />\r\n                        ) : (\r\n                            <Loader\r\n                                type=\"Puff\"\r\n                                color=\"Blue\"\r\n                                height={50}\r\n                                width={50}\r\n                            />\r\n                        )\r\n                        }\r\n                    </div>\r\n                    <div className=\"col-md-8\">\r\n                        <div className=\"card-body\">\r\n                            <h3 className=\"card-title\">{hotel.title}{\" \"}\r\n                                <span className=\"text-primary\">\r\n                                    {currencyFormatter({\r\n                                        amount: hotel.price,\r\n                                        currency: 'Inr'\r\n                                    })}\r\n                                </span>\r\n                            </h3>\r\n                            <p className=\"alert alert-info\">{hotel.location}</p>\r\n                            <p className=\"card-text\">{`${hotel.content.substring(1, 100)}...`}</p>\r\n                            <p className=\"card-text\">\r\n                                <span className=\"text-primary\">\r\n                                    for {diffDays(hotel.from, hotel.to)}{\" \"}\r\n                                    {diffDays(hotel.from, hotel.to) <= 1 ? \"day\" : \"days\"}\r\n                                </span>\r\n                            </p>\r\n                            <p className=\"card-text\">Bed {hotel.bed}</p>\r\n                            <p className=\"card-text\">\r\n                                Available from {new Date(hotel.from).toLocaleDateString()}\r\n                            </p>\r\n\r\n                            {\r\n                                showModal && \r\n                                <OrderdModal \r\n                                    session={session} \r\n                                    orderdBy={orderdBy} \r\n                                    showModal={showModal} \r\n                                    setShowModal={setShowModal}\r\n                                /> \r\n                            }\r\n\r\n                            <div className=\"d-flex justify-content-between h4\">\r\n                                <button\r\n                                    onClick={() => setShowModal(!showModal)}\r\n                                    className=\"btn btn-primary\">\r\n                                    Show Payment info\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BookingCard\r\n","import { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { getuserBooking } from '../actions/hotel'\r\nimport { useSelector } from 'react-redux'\r\nimport ConnectNav from '../components/nav/ConnectNav'\r\nimport DashboardNav from '../components/nav/DashboardNav'\r\nimport BookingCard from '../components/smallCard/BookingCard'\r\nimport TopNavBar from '../components/TopNavBar/TopNavBar'\r\n\r\n\r\nconst Dashboard = () => {\r\n\r\n    const {auth} = useSelector(state => ({...state}));\r\n    const [bookings, setBookings] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getHotelBooking()\r\n    },[])\r\n\r\n    const getHotelBooking = async () => {\r\n        const res = await getuserBooking(auth.token);\r\n        setBookings(res.data.booking)\r\n    }\r\n\r\n    return (\r\n        <TopNavBar>\r\n            <div className=\"container-fluid bg-secondary p-5 text-center\">\r\n                <ConnectNav />\r\n            </div>\r\n\r\n            <div className=\"container-fluid p-4\">\r\n                <DashboardNav />\r\n            </div>\r\n\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-10\">\r\n                        <h2>Your Bookings</h2>\r\n                    </div>\r\n                    <div className=\"col-md-2\">\r\n                        <Link to='/' className=\"btn btn-primary\">Browse Hotels</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                {   bookings.map((b, idx) => (\r\n                        <BookingCard \r\n                            key={idx} \r\n                            hotel={b.hotel}\r\n                            session={b.session}\r\n                            orderdBy={b.orderedBy} \r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </TopNavBar>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import ConnectNav from '../components/nav/ConnectNav'\r\nimport DashboardNav from '../components/nav/DashboardNav'\r\nimport TopNavBar from '../components/TopNavBar/TopNavBar'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport { HomeOutlined } from '@ant-design/icons'\r\nimport { createConnectAcoount } from '../actions/Stripe'\r\nimport { useEffect, useState } from 'react'\r\nimport { toast } from 'react-toastify'\r\nimport { deleteHotel, getSellerHotel } from '../actions/hotel'\r\nimport SmallCard from '../components/smallCard/SmallCard'\r\n\r\nconst DashboardSeller = () => {\r\n\r\n    const { auth } = useSelector(state => ({ ...state }));\r\n    const [loading, setLoading] = useState(false);\r\n    const [hotels, setHotels] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getHotel()\r\n    },[])\r\n\r\n    const getHotel = async () => {\r\n        const res = await getSellerHotel(auth.token)\r\n        setHotels(res.data)\r\n    }\r\n\r\n    const handleClick = async () => {\r\n        setLoading(true)\r\n        try {\r\n            let res = await createConnectAcoount(auth.token)\r\n            window.location.href = res.data\r\n            setLoading(false)\r\n        } catch (error) {\r\n            console.log(error);\r\n            toast.error('Stripe connect failed, Try again.'); \r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const handleHotelDelete = async (id) => {\r\n        if(!window.confirm('Are you sure?')) return \r\n        await deleteHotel(auth.token, id).then(res => {\r\n            toast.success('Hotel deleted')\r\n            getHotel()\r\n        })\r\n    }\r\n\r\n    const connected = () => (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-10\">\r\n                    <h2>Hotels</h2>\r\n                </div>\r\n                <div className=\"col-md-2\">\r\n                    <Link to='/hotels/new' className=\"btn btn-primary\">+ Add new</Link>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                { hotels.map((h, idx) => (\r\n                    <SmallCard \r\n                        key={idx} \r\n                        hotel={h} \r\n                        showMoreButton={false} \r\n                        seller={true}\r\n                        handleHotelDelete={handleHotelDelete}  />\r\n                    ))\r\n                }\r\n            </div>\r\n            {/* {\r\n                hotels.length <= 0 &&\r\n                <div className=\"container-fluid offset-md-5\">\r\n                    <p>No hotel posted by yourself</p>\r\n                </div>\r\n            } */}\r\n        </div>\r\n        \r\n    )\r\n\r\n    const notConnected = () => (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-md-3 text-center\">\r\n                    <div className=\"p-4 pointer\">\r\n                        <HomeOutlined className=\"h1\" />\r\n                        <h4>\r\n                            Setup payouts to post hotel rooms\r\n                        </h4>\r\n                        <p className=\"lead\">\r\n                            partners with stripe to transfer earnings to Your bank account\r\n                        </p>\r\n                    </div>\r\n                    <button \r\n                        disabled={loading}\r\n                        className=\"btn btn-primary mb-3\"\r\n                        onClick={handleClick}\r\n                    >\r\n                        { loading ? 'Processing...' : 'Setup Payouts'}\r\n                    </button>\r\n                    <p className=\"text-muted\">\r\n                        <small>You'll be redirected to Stripe to complete the onboarding process</small>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    \r\n    return (\r\n        <TopNavBar>\r\n            <div className=\"container-fluid bg-secondary p-5 text-center\">\r\n                <ConnectNav />\r\n            </div>\r\n\r\n            <div className=\"container-fluid py-4\">\r\n                <DashboardNav />\r\n            </div>\r\n           \r\n            {\r\n                auth &&\r\n                    auth.user &&\r\n                    auth.user.stripe_seller &&\r\n                    auth.user.stripe_seller.charges_enabled ?\r\n                    connected() : notConnected()\r\n            }\r\n        </TopNavBar>\r\n    )\r\n}\r\n\r\nexport default DashboardSeller\r\n","import React, { useState } from 'react'\r\nimport TopNavBar from '../../components/TopNavBar/TopNavBar'\r\nimport { toast } from 'react-toastify'\r\nimport AlgoliaPlaces, { log } from 'algolia-places-react'\r\nimport { DatePicker, Select } from 'antd'\r\nimport moment from 'moment'\r\nimport { createHotel } from '../../actions/hotel'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst { Option } = Select\r\n\r\nconst config = {\r\n    appId: process.env.REACT_APP_ALGOLIA_ID,\r\n    apiKey: process.env.REACT_APP_ALGOLIA_API_KEY,\r\n    language: 'en',\r\n}\r\n\r\nconst NewHotel = () => {\r\n\r\n    const {auth} = useSelector(state => ({...state}))\r\n\r\n    const [values, setValues] = useState({\r\n        title: '',\r\n        content: '',\r\n        image: '',\r\n        price: '',\r\n        from: '',\r\n        to: '',\r\n        bed: ''\r\n    })\r\n\r\n    const [location, setLocation] = useState(\"\")\r\n    const [preview, setPreview] = useState(\r\n        \"https://via.placeholder.com/150.png?text=PREVIEW\"\r\n    )\r\n\r\n    const { title, content, image, price, from, bed, to } = values;\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        let formdata = new FormData();\r\n        formdata.append('title', title)\r\n        formdata.append('content', content)\r\n        formdata.append('price', price)\r\n        formdata.append('from', from)\r\n        formdata.append('to', to)\r\n        formdata.append('bed', bed)\r\n        formdata.append('location', location)\r\n        image && formdata.append('image', image)\r\n\r\n        try {\r\n            const res = await createHotel(auth.token, formdata);\r\n            console.log(res);\r\n            toast.success('New hotel is posted')\r\n            setTimeout(() => {\r\n                window.location.reload()\r\n            }, 1000);\r\n        } catch (error) {\r\n           if(error.response.status === 400 ) toast.error(error.response.data)\r\n        }\r\n    }\r\n\r\n    const handleImageChange = (e) => {\r\n        // console.log(e.target.files[0].name);\r\n        setValues({...values, image: e.target.files[0]});\r\n        setPreview(URL.createObjectURL(e.target.files[0]))\r\n        \r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setValues({...values, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    const handleForm = () => (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <label className=\"btn btn-outline-secondary m-2 text-left\">\r\n                    Image\r\n                    <input\r\n                        type=\"file\"\r\n                        name=\"image\"\r\n                        accept=\"image/*\"\r\n                        hidden\r\n                        onChange={handleImageChange} />\r\n                </label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    placeholder=\"Title\"\r\n                    className=\"form-control m-2\"\r\n                    value={title}\r\n                    onChange={handleChange} \r\n                />\r\n                <textarea\r\n                    name=\"content\"\r\n                    placeholder=\"Content\"\r\n                    className=\"form-control m-2\"\r\n                    value={content}\r\n                    onChange={handleChange} \r\n                />\r\n\r\n                <AlgoliaPlaces \r\n                    className=\"form-control ml-2 mr-2\"\r\n                    placeholder=\"Location\"\r\n                    defaultValue={location}\r\n                    option={config}\r\n                    onChange={({suggestion}) => setLocation(suggestion.value)}\r\n                />\r\n\r\n                <input\r\n                    type=\"number\"\r\n                    name=\"price\"\r\n                    placeholder=\"Price\"\r\n                    className=\"form-control m-2\"\r\n                    value={price}\r\n                    onChange={handleChange} \r\n                />\r\n                <Select \r\n                    onChange={(value) => setValues({...values, bed: value}) }\r\n                    className=\"w-100 m-2\" \r\n                    size=\"large\"\r\n                    placeholder=\"No of Beds\">\r\n                        <Option key={1}>{1}</Option>\r\n                        <Option key={2}>{2}</Option>\r\n                        <Option key={3}>{3}</Option>\r\n                        <Option key={4}>{4}</Option>\r\n                </Select>\r\n            </div>\r\n\r\n                <DatePicker\r\n                    placeholder=\"From date\"\r\n                    className=\"form-control m-2\" \r\n                    onChange={(date, dateString) => \r\n                        setValues({...values, from: dateString})}\r\n                    disabledDate={(current) => \r\n                        current && current.valueOf() < moment().subtract(1, 'days')}\r\n                />\r\n                <DatePicker\r\n                    placeholder=\"To date\"\r\n                    className=\"form-control m-2\" \r\n                    onChange={(date, dateString) => \r\n                        setValues({...values, to: dateString})}\r\n                    disabledDate={(current) => \r\n                        current && current.valueOf() < moment().subtract(1, 'days')}\r\n                />\r\n            <button \r\n                className=\"btn btn-outline-primary m-2\"\r\n                type=\"submit\"\r\n                >\r\n                    Save\r\n            </button>\r\n        </form>\r\n    )\r\n\r\n\r\n\r\n    return (\r\n        <TopNavBar>\r\n            <>\r\n                <div className=\"text-center p-4 mt-2 header bg-secondary\">\r\n                    <h2>Add New Hotel</h2>\r\n                </div>\r\n\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-10\">\r\n                            {handleForm()}\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                           <img \r\n                            src={preview} \r\n                            alt=\"preview_image\" \r\n                            className=\"img img-fluid m-2\" \r\n                        />\r\n                        </div>\r\n                        {/* <pre>{JSON.stringify(values, null, 4)}</pre> */}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        </TopNavBar>\r\n    )\r\n}\r\n\r\nexport default NewHotel\r\n","import {useEffect} from 'react'\r\nimport TopNavBar from '../components/TopNavBar/TopNavBar'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getAccountStatus } from '../actions/Stripe'\r\nimport { LoadingOutlined } from '@ant-design/icons'\r\nimport { updateUserInLocalStorage } from '../actions/auth'\r\n\r\nconst StripeCallback = ({ history }) => {\r\n\r\n    const {auth} = useSelector(state => ({...state}));\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(auth && auth.token) accountStatus()\r\n    },[auth])\r\n\r\n    const accountStatus = async() => {\r\n        try {\r\n            let res = await getAccountStatus(auth.token);\r\n            // update user in localstorage\r\n            updateUserInLocalStorage(res.data, () => {\r\n                // update user in redux-state\r\n                dispatch({\r\n                    type: 'USER_LOGGEDIN',\r\n                    payload: res.data\r\n                })\r\n            })\r\n            // redirect user to dashboard\r\n            window.location.href = '/dashboard/seller'\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <TopNavBar>\r\n            <div className=\"d-flex justify-content-center p-5\">\r\n                <LoadingOutlined className=\"h1 p-5 text-danger\" />\r\n            </div>\r\n        </TopNavBar>\r\n    )\r\n}\r\n\r\nexport default StripeCallback\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { editHotel, getHotelById } from '../../actions/hotel'\r\nimport TopNavBar from '../../components/TopNavBar/TopNavBar'\r\nimport { toast } from 'react-toastify'\r\nimport AlgoliaPlaces from 'algolia-places-react'\r\nimport { DatePicker, Select } from 'antd'\r\nimport moment from 'moment'\r\nimport { API } from '../../urlConfig'\r\n\r\nconst { Option } = Select\r\n\r\nconst config = {\r\n    appId: process.env.REACT_APP_ALGOLIA_ID,\r\n    apiKey: process.env.REACT_APP_ALGOLIA_API_KEY,\r\n    language: 'en',\r\n}\r\n\r\nconst EditHotel = ({match}) => {\r\n\r\n    const {auth} = useSelector(state => ({...state}))\r\n\r\n    const [values, setValues] = useState({\r\n        title: '',\r\n        content: '',\r\n        price: '',\r\n        from: '',\r\n        to: '',\r\n        bed: '',\r\n        location: ''\r\n    })\r\n\r\n\r\n    const [preview, setPreview] = useState(\r\n        \"https://via.placeholder.com/100.png?text=PREVIEW\"\r\n    )\r\n\r\n    const [image, setImage] = useState('');\r\n    const { title, content, price, location, from, bed, to } = values;\r\n\r\n    \r\n    useEffect(() => {\r\n        sellerHotel()\r\n    },[])\r\n\r\n    const sellerHotel = async () => {\r\n        const res = await getHotelById(match.params.hotelId)\r\n        setValues({...values, ...res.data})\r\n        setPreview(`${API}/hotel/image/${res.data._id}`)\r\n    }\r\n\r\n    const handleImageChange = (e) => {\r\n        setImage(e.target.files[0]);\r\n        setPreview(URL.createObjectURL(e.target.files[0]));\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setValues({...values, [e.target.name]: e.target.value});\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        let formdata = new FormData();\r\n        formdata.append('title', title)\r\n        formdata.append('content', content)\r\n        formdata.append('price', price)\r\n        formdata.append('from', from)\r\n        formdata.append('to', to)\r\n        formdata.append('bed', bed)\r\n        formdata.append('location', location)\r\n        image && formdata.append('image', image)\r\n\r\n        try {\r\n            const {data} =  await editHotel(auth.token, formdata, match.params.hotelId)\r\n            toast.success(`${data.title} is updated...`)\r\n        } catch (error) {\r\n            toast.error(error.response.data)\r\n        }\r\n        \r\n    }\r\n\r\n    const handleForm = () => (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <label className=\"btn btn-outline-secondary m-2 text-left\">\r\n                    Image\r\n                    <input\r\n                        type=\"file\"\r\n                        name=\"image\"\r\n                        accept=\"image/*\"\r\n                        hidden\r\n                        onChange={handleImageChange} />\r\n                </label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    placeholder=\"Title\"\r\n                    className=\"form-control m-2\"\r\n                    value={title}\r\n                    onChange={handleChange} \r\n                />\r\n                <textarea\r\n                    name=\"content\"\r\n                    placeholder=\"Content\"\r\n                    className=\"form-control m-2\"\r\n                    value={content}\r\n                    onChange={handleChange} \r\n                />\r\n\r\n                {location && location.length > 0 &&\r\n                    <AlgoliaPlaces \r\n                        className=\"form-control ml-2 mr-2\"\r\n                        placeholder=\"Location\"\r\n                        defaultValue={location}\r\n                        option={config}\r\n                        onChange={({suggestion}) => setValues({...values, location: suggestion.value})}\r\n                    />\r\n                }\r\n\r\n                <input\r\n                    type=\"number\"\r\n                    name=\"price\"\r\n                    placeholder=\"Price\"\r\n                    className=\"form-control m-2\"\r\n                    value={price}\r\n                    onChange={handleChange} \r\n                />\r\n                <Select \r\n                    onChange={(value) => setValues({...values, bed: value}) }\r\n                    className=\"w-100 m-2\" \r\n                    size=\"large\"\r\n                    value={bed}\r\n                    placeholder=\"No of Beds\">\r\n                        <Option key={1}>{1}</Option>\r\n                        <Option key={2}>{2}</Option>\r\n                        <Option key={3}>{3}</Option>\r\n                        <Option key={4}>{4}</Option>\r\n                </Select>\r\n            </div>\r\n\r\n                {from && <DatePicker\r\n                    defaultValue={moment(from, 'YYYY-MM-DD')}\r\n                    placeholder=\"From date\"\r\n                    className=\"form-control m-2\" \r\n                    onChange={(dateString) => \r\n                        setValues({...values, from: dateString})}\r\n                    disabledDate={(current) => \r\n                        current && current.valueOf() < moment().subtract(1, 'days')}\r\n                />}\r\n                {to && <DatePicker\r\n                    defaultValue={moment(to, 'YYYY-MM-DD')}\r\n                    placeholder=\"To date\"\r\n                    className=\"form-control m-2\" \r\n                    onChange={(dateString) => \r\n                        setValues({...values, to: dateString})}\r\n                    disabledDate={(current) => \r\n                        current && current.valueOf() < moment().subtract(1, 'days')}\r\n                />}\r\n            <button \r\n                className=\"btn btn-outline-primary m-2\"\r\n                type=\"submit\"\r\n                >\r\n                    Save\r\n            </button>\r\n        </form>\r\n    )\r\n\r\n    return (\r\n        <TopNavBar>\r\n            <>\r\n                <div className=\"text-center p-4 mt-2 header bg-secondary\">\r\n                    <h2>Edit Hotel</h2>\r\n                </div>\r\n\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-9\">\r\n                            {handleForm()}\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                           <img \r\n                            src={preview} \r\n                            alt=\"preview_image\" \r\n                            className=\"img img-fluid m-2\" \r\n                        />\r\n                        </div>\r\n                        {/* <pre>{JSON.stringify(values, null, 4)}</pre> */}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        </TopNavBar>\r\n    )\r\n}\r\n\r\nexport default EditHotel\r\n\r\n\r\n       ","import React, { useEffect, useState } from 'react'\r\nimport TopNavBar from '../../components/TopNavBar/TopNavBar'\r\nimport { diffDays, getHotelById, hotelAlreadyBooked } from '../../actions/hotel'\r\nimport { API } from '../../urlConfig';\r\nimport { useSelector } from 'react-redux'\r\nimport moment from 'moment'\r\nimport { getStripeSessionId } from '../../actions/Stripe';\r\nimport { loadStripe } from '@stripe/stripe-js'\r\n\r\n\r\n\r\nconst HotelDetails = ({ match, history }) => {\r\n\r\n    const [hotels, setHotels] = useState([]);\r\n    const [image, setImage] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [isAlreadyBooked, setIsAlreadyBooked] = useState(false);\r\n    const {auth} = useSelector(state => ({...state}))\r\n\r\n    useEffect(() => {\r\n        hotelDetails()\r\n    },[])\r\n\r\n\r\n    useEffect(() => {\r\n        // if(auth && auth.token) {\r\n        //     hotelAlreadyBooked(auth.token, match.params.hotelId)\r\n        //     .then(res => {\r\n        //         // console.log(res)\r\n        //         setIsAlreadyBooked(res.data.ok);\r\n        //     })\r\n        // }\r\n    },[auth, match.params.hotelId])\r\n\r\n    const hotelDetails = async () => {\r\n        const res = await getHotelById(match.params.hotelId);\r\n        setHotels(res.data)\r\n        setImage(`${API}/hotel/image/${match.params.hotelId}`)\r\n    }\r\n\r\n    const handleClick = async (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!auth || !auth.token) {\r\n            history.push('/login')\r\n            return \r\n        }\r\n\r\n        setLoading(true)\r\n        if(!auth) history.push('/login')\r\n\r\n        try {\r\n            const res = await getStripeSessionId(auth.token, match.params.hotelId)\r\n            const stripe = await loadStripe(`${process.env.REACT_APP_STRIPE_KEY}`);\r\n               stripe.\r\n                   redirectToCheckout({\r\n                    sessionId: res.data.sessionId\r\n                })\r\n\r\n        } catch (error) {\r\n            setLoading(false)\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <TopNavBar>\r\n            <div className=\"text-center p-4 mt-2 header bg-secondary\">\r\n                <h2>{hotels.title}</h2>\r\n            </div>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                    <img \r\n                            src={image} \r\n                            alt={hotels.title} \r\n                            className=\"img img-fluid m-2\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <br/>\r\n                        <b>{hotels.content}</b>\r\n                        <p className=\"alert alert-info mt-3\">{hotels.price}</p>\r\n                        <p className=\"card-text\">\r\n                            <span className=\"text-primary\">\r\n                                for {diffDays(hotels.from, hotels.to)}{\" \"}\r\n                                {diffDays(hotels.from, hotels.to) <=1 ? 'day' : 'days'}\r\n                            </span>\r\n                        </p>\r\n                        <p>from <br/>\r\n                            {moment(hotels.from).format('MMMM Do YYYY, h:mm:ss a')}\r\n                        </p>\r\n                        <p>to <br/>\r\n                            {moment(hotels.to).format('MMMM Do YYYY, h:mm:ss a')}\r\n                        </p>\r\n                        <i>Posted by <b>{hotels.postedBy && hotels.postedBy.name}</b></i>\r\n                        <br/>\r\n                            <button \r\n                                className=\"btn btn-primary btn-large mt-4\"\r\n                                onClick={handleClick}\r\n                                disabled={loading || isAlreadyBooked}\r\n                            >   \r\n                                { isAlreadyBooked \r\n                                  ? \"Already Booked\"\r\n                                    :loading \r\n                                        ? (\"Loading...\") \r\n                                        :\r\n                                        (auth?.token ? 'Book Now' : \"Login to Book\")\r\n                                }\r\n                                \r\n                            </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </TopNavBar>\r\n    )\r\n}\r\n\r\nexport default HotelDetails\r\n","import React, { useEffect } from 'react'\r\nimport TopNavBar from '../components/TopNavBar/TopNavBar'\r\nimport { useSelector } from 'react-redux'\r\nimport { stripeSuccessRequest } from '../actions/Stripe'\r\nimport { LoadingOutlined } from '@ant-design/icons'\r\n\r\nconst StripeSuccess = ({ match, history }) => {\r\n\r\n    const { auth } = useSelector(state => ({...state}));\r\n\r\n    useEffect(() => {\r\n        stripeSuccessRequest(auth.token, match.params.hotelId)\r\n        .then(res => {\r\n           if(res.data.success) {\r\n            console.log(res);\r\n            history.push('/dashboard');\r\n           } else {\r\n            history.push('/stripe/cancel');\r\n           }\r\n        })\r\n    },[match.params.hotelId])\r\n\r\n    return (\r\n        <TopNavBar>\r\n            <div className=\"container\">\r\n                <div className=\"text-center p-5\">\r\n                    <LoadingOutlined \r\n                        className=\"display-1 text-danger\" \r\n                    />\r\n                </div>\r\n            </div>\r\n        </TopNavBar>\r\n    )\r\n}\r\n\r\nexport default StripeSuccess\r\n","import React from 'react'\r\nimport TopNavBar from '../components/TopNavBar/TopNavBar'\r\n\r\nconst StripeFailed = () => {\r\n    return (\r\n        <TopNavBar>\r\n            <div className=\"container\">\r\n                <div className=\"text-center\">\r\n                    <h1>Payment failed. Try again...</h1>\r\n                </div>\r\n            </div>\r\n        </TopNavBar>\r\n    )\r\n}\r\n\r\nexport default StripeFailed\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport queryString from 'query-string'\r\nimport TopNavBar from '../../components/TopNavBar/TopNavBar'\r\nimport { searchListing } from '../../actions/hotel'\r\n\r\nconst SearchResultPage = () => {\r\n\r\n    const [searchLocation, setSearchLocation] = useState('');\r\n    const [searchDate, setSearchDate] = useState('');\r\n    const [searchBed, setSearchBed] = useState('');\r\n    const [hotels, setHotels] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const { location, bed, date } = queryString.parse(window.location.search);\r\n        searchListing({ location, bed, date }).then(res => {\r\n            setHotels(res.data.result)\r\n        })\r\n    },[window.location.search])\r\n\r\n    return (\r\n        <TopNavBar>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    Search result\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"container-fluid\">\r\n                <pre>{JSON.stringify(hotels, null, 4)}</pre>\r\n            </div>\r\n        </TopNavBar>\r\n    )\r\n}\r\n\r\nexport default SearchResultPage\r\n","import { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Login from './page/Auth/Login';\nimport Register from './page/Auth/Register';\nimport Home from './page/Home/Home';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css'\nimport PrivateRoute from './components/privateRoute/PrivateRoute';\nimport Dashboard from './user/Dashboard';\nimport DashboardSeller from './user/DashboardSeller';\nimport NewHotel from './page/hotel/NewHotel';\nimport StripeCallback from './stripe/StripeCallback';\nimport EditHotel from './page/hotel/EditHotel';\nimport HotelDetails from './page/hotel/HotelDetails';\nimport StripeSuccess from './stripe/StripeSuccess';\nimport StripeFailed from './stripe/StripeFailed';\nimport SearchResultPage from './page/hotel/SearchResultPage';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <ToastContainer position=\"top-center\" />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/register\" component={Register} />\n        <Route exact path=\"/hotel/edit/:hotelId\" component={EditHotel} />\n        <Route exact path=\"/hotel/:hotelId\" component={HotelDetails} />\n        <Route exact path=\"/search-result\" component={SearchResultPage} />\n        \n        <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n        <PrivateRoute exact path=\"/dashboard/seller\" component={DashboardSeller} />\n        <PrivateRoute exact path=\"/hotels/new\" component={NewHotel} />\n        <PrivateRoute exact path=\"/stripe/callback\" component={StripeCallback} />\n        <PrivateRoute exact path=\"/stripe/success/:hotelId\" component={StripeSuccess} />\n        <PrivateRoute exact path=\"/stripe/cancel\" component={StripeFailed} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","let userState;\r\n\r\nif(window.localStorage.getItem('auth')) {\r\n    userState = JSON.parse(window.localStorage.getItem('auth'))\r\n} else {\r\n    userState = null\r\n}\r\n\r\nexport const authReducer = (state = userState, action) => {\r\n    switch(action.type){\r\n        case 'USER_LOGGEDIN':\r\n            return {...state, ...action.payload}\r\n        case 'LOGOUT':\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { authReducer } from './authReducer';\r\n\r\nconst rooReducer = combineReducers({\r\n    auth: authReducer\r\n})\r\n\r\nexport default rooReducer","import { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { applyMiddleware, createStore } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rooReducer from './reducer/Reducer'\r\n\r\n\r\nconst store = createStore(\r\n    rooReducer,\r\n    composeWithDevTools(applyMiddleware(thunk))\r\n)\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './Store';\nimport 'antd/dist/antd.css';\nimport './App.css'\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}